% EEG = eeg_interpoliuok64(EEG, Reikalingi_kanalai, Atmesti_nepasirinktus) 
%
% Reikalingi_kanalai    - iš išvardintų kanalų interpoliuosimi tie, kurių nėra EEG,
%                         likę kanalai liks kokie yra.
% Atmesti_nepasirinktus - [0|1], 0 - palikti (numatyta), 1 – atmesti neišvardintuosiuos
% 
%%
%
% (C) 2016-2017 Mindaugas Baranauskas
%

% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Ši programa yra laisva. Jūs galite ją platinti ir/arba modifikuoti
% remdamiesi Free Software Foundation paskelbtomis GNU Bendrosios
% Viešosios licencijos sąlygomis: 3 licencijos versija, arba (savo
% nuožiūra) bet kuria vėlesne versija.
%
% Ši programa platinama su viltimi, kad ji bus naudinga, bet BE JOKIOS
% GARANTIJOS; taip pat nesuteikiama jokia numanoma garantija dėl TINKAMUMO
% PARDUOTI ar PANAUDOTI TAM TIKRAM TIKSLU. Daugiau informacijos galite 
% rasti pačioje GNU Bendrojoje Viešojoje licencijoje.
%
% Jūs kartu su šia programa turėjote gauti ir GNU Bendrosios Viešosios
% licencijos kopiją; jei ne - žr. <https://www.gnu.org/licenses/>.
%
% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% This program is free software; you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation; either version 3 of the License, or
% (at your option) any later version.
%
% This program is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.
%
% You should have received a copy of the GNU General Public License
% along with this program.  If not, see <http://www.gnu.org/licenses/>.
%
%%

function EEG = eeg_interpoliuok64(EEG, varargin)

if nargin > 1; Reikalingi_kanalai=varargin{1};
else           Reikalingi_kanalai= ...
        {'Fp1' 'Fpz' 'Fp2' 'F7' 'F3' 'Fz' 'F4' 'F8' 'FC5' 'FC1' 'FC2' 'FC6' 'M1' 'T7' 'C3' 'Cz' 'C4' ... 
         'T8' 'M2' 'CP5' 'CP1' 'CP2' 'CP6' 'P7' 'P3' 'Pz' 'P4' 'P8' 'POz' 'O1' 'Oz' 'O2' 'AF7' 'AF3' ... 
         'AF4' 'AF8' 'F5' 'F1' 'F2' 'F6' 'FC3' 'FCz' 'FC4' 'C5' 'C1' 'C2' 'C6' 'CP3' 'CPz' 'CP4' ...
         'P5' 'P1' 'P2' 'P6' 'PO5' 'PO3' 'PO4' 'PO6' 'FT7' 'FT8' 'TP7' 'TP8' 'PO7' 'PO8' ;};
end;

if nargin > 2; Atmesti_nepasirinktus=varargin{2};
else           Atmesti_nepasirinktus=0;
end;

%% Kanalų struktūra

% Įsiminimas pagal semą kanalų struktūrą
%for i=1:length(EEG.chanlocs) ;
%    KANALU_DUOMENYS{i,1}= EEG.chanlocs(i).labels             ;
%    KANALU_DUOMENYS{i,2}= EEG.chanlocs(i).type               ;
%    KANALU_DUOMENYS{i,3}= EEG.chanlocs(i).theta              ;
%    KANALU_DUOMENYS{i,4}= EEG.chanlocs(i).radius             ;
%    KANALU_DUOMENYS{i,5}= EEG.chanlocs(i).X                  ;
%    KANALU_DUOMENYS{i,7}= EEG.chanlocs(i).Y                  ;
%    KANALU_DUOMENYS{i,8}= EEG.chalocs(i).Z                   ;
%    KANALU_DUOMENYS{i,9}= EEG.chanlocs(i).sph_theta          ;
%    KANALU_DUOMENYS{i,10}= EEG.chanlocs(i).sph_phi           ;
%    KANALU_DUOMENYS{i,11}= EEG.chanlocs(i).sph_radius        ;
%    KANALU_DUOMENYS{i,12}= EEG.chanlocs(i).urchan            ;
%    KANALU_DUOMENYS{i,13}= EEG.chanlocs(i).ref               ;
%end ;

KANALU_DUOMENYS={
    'Fp1','',-17.9260000000000,0.514988888888889,80.7840137690914,26.1330144040702,-4.00108454195971,17.9260000000000,-2.69799999999999,85,1,'';
    'Fpz','',0,0.506688888888889,84.9812336134463,0,-1.78603850374883,0,-1.20399999999999,85,2,'';
    'Fp2','',17.9260000000000,0.514988888888889,80.7840137690914,-26.1330144040702,-4.00108454195971,-17.9260000000000,-2.69799999999999,85,3,'';
    'F7' ,'',-53.9130000000000,0.528083333333333,49.8713779489202,68.4233350269540,-7.48951836002624,53.9130000000000,-5.05500000000000,85,4,'';
    'F3' ,'',-39.9470000000000,0.344594444444444,57.5510633930990,48.2004273175388,39.8697116710185,39.9470000000000,27.9730000000000,85,5,'';
    'Fz' ,'',0,0.253377777777778,60.7384809484625,0,59.4629038314919,0,44.3920000000000,85,6,'';
    'F4' ,'',39.8970000000000,0.344500000000000,57.5840261068105,-48.1425964684523,39.8919834378528,-39.8970000000000,27.9900000000000,85,7,'';
    'F8' ,'',53.8670000000000,0.528066666666667,49.9265268118817,-68.3835902976096,-7.48508507040089,-53.8670000000000,-5.05200000000000,85,8,'';
    'FC5','',-69.3320000000000,0.408233333333333,28.7628234353576,76.2473645099531,24.1669069868857,69.3320000000000,16.5180000000000,85,9,'';
    'FC1','',-44.9250000000000,0.181183333333333,32.4361838987395,32.3513771312283,71.5980612293391,44.9250000000000,57.3870000000000,85,10,'';
    'FC2','',44.9250000000000,0.181183333333333,32.4361838987395,-32.3513771312283,71.5980612293391,-44.9250000000000,57.3870000000000,85,11,'';
    'FC6','',69.3320000000000,0.408233333333333,28.7628234353576,-76.2473645099531,24.1669069868857,-69.3320000000000,16.5180000000000,85,12,'';
    'M1' ,'',-100.419000000000,0.747333333333333,-10.9602176732027,59.6061977901225,-59.5984464022411,100.419000000000,-44.5200000000000,85,13,'';
    'T7' ,'',-90,0.533183333333333,5.17649253748256e-15,84.5385386396573,-8.84508251353112,90,-5.97300000000000,85,14,'';
    'C3' ,'',-90,0.266688888888889,3.86812533613566e-15,63.1712807125907,56.8716914917349,90,41.9960000000000,85,15,'';
    'Cz' ,'',0,0,5.20474889637625e-15,0,85,0,90,85,16,'';
    'C4' ,'',90,0.266666666666667,3.86788221025119e-15,-63.1673101655785,56.8761015405030,-90,42,85,17,'';
    'T8' ,'',90,0.533183333333333,5.17649253748256e-15,-84.5385386396573,-8.84508251353112,-90,-5.97300000000000,85,18,'';
    'M2' ,'',100.419000000000,0.747333333333333,-10.9602176732027,-59.6061977901225,-59.5984464022411,-100.419000000000,-44.5200000000000,85,19,'';
    'CP5','',-110.668000000000,0.408233333333333,-28.7628234353576,76.2473645099531,24.1669069868857,110.668000000000,16.5180000000000,85,20,'';
    'CP1','',-135.075000000000,0.181183333333333,-32.4361838987395,32.3513771312283,71.5980612293391,135.075000000000,57.3870000000000,85,21,'';
    'CP2','',135.075000000000,0.181183333333333,-32.4361838987395,-32.3513771312283,71.5980612293391,-135.075000000000,57.3870000000000,85,22,'';
    'CP6','',110.668000000000,0.408233333333333,-28.7628234353576,-76.2473645099531,24.1669069868857,-110.668000000000,16.5180000000000,85,23,'';
    'P7' ,'',-126.087000000000,0.528083333333333,-49.8713779489202,68.4233350269539,-7.48951836002624,126.087000000000,-5.05500000000000,85,24,'';
    'P3' ,'',-140.053000000000,0.344594444444444,-57.5510633930990,48.2004273175389,39.8697116710185,140.053000000000,27.9730000000000,85,25,'';
    'Pz' ,'',180,0.253377777777778,-60.7384809484625,-7.43831862786072e-15,59.4629038314919,-180,44.3920000000000,85,26,'';
    'P4' ,'',140.103000000000,0.344500000000000,-57.5840261068105,-48.1425964684523,39.8919834378528,-140.103000000000,27.9900000000000,85,27,'';
    'P8' ,'',126.133000000000,0.528066666666667,-49.9265268118817,-68.3835902976096,-7.48508507040089,-126.133000000000,-5.05200000000000,85,28,'';
    'POz','',180,0.379944444444445,-79.0255388591416,-9.67783732147425e-15,31.3043800133831,-180,21.6100000000000,85,29,'';
    'O1' ,'',-162.074000000000,0.514988888888889,-80.7840137690914,26.1330144040702,-4.00108454195971,162.074000000000,-2.69799999999999,85,30,'';
    'Oz' ,'',180,0.506688888888889,-84.9812336134463,-1.04071995732300e-14,-1.78603850374883,-180,-1.20399999999999,85,31,'';
    'O2' ,'',162.074000000000,0.514988888888889,-80.7840137690914,-26.1330144040702,-4.00108454195971,-162.074000000000,-2.69799999999999,85,32,'';
    'AF7','',-35.8920000000000,0.522333333333333,68.6910763510323,49.7094313148880,-5.95889822761610,35.8920000000000,-4.02000000000000,85,33,'';
    'AF3','',-22.4610000000000,0.421127777777778,76.1527667684846,31.4827967984807,20.8468131677331,22.4610000000000,14.1970000000000,85,34,'';
    'AF4','',22.4610000000000,0.421127777777778,76.1527667684846,-31.4827967984807,20.8468131677331,-22.4610000000000,14.1970000000000,85,35,'';
    'AF8','',35.8580000000000,0.522311111111111,68.7208994216315,-49.6689040281160,-5.95297869371352,-35.8580000000000,-4.01600000000001,85,36,'';
    'F5' ,'',-49.4050000000000,0.431594444444444,54.0378881132512,63.0582218645482,18.1264255588676,49.4050000000000,12.3130000000000,85,37,'';
    'F1' ,'',-23.4930000000000,0.279027777777778,59.9127302448179,26.0420933899754,54.3808249889562,23.4930000000000,39.7750000000000,85,38,'';
    'F2' ,'',23.4930000000000,0.278783333333333,59.8744127660118,-26.0254380421476,54.4309771236893,-23.4930000000000,39.8190000000000,85,39,'';
    'F6' ,'',49.4050000000000,0.431283333333333,54.0263340465386,-63.0447391225751,18.2075835425317,-49.4050000000000,12.3690000000000,85,40,'';
    'FC3','',-62.4250000000000,0.288222222222222,30.9552849531915,59.2749781760892,52.4713950232968,62.4250000000000,38.1200000000000,85,41,'';
    'FCz','',0,0.126622222222222,32.9278836352560,0,78.3629662487520,0,67.2080000000000,85,42,'';
    'FC4','',62.4250000000000,0.288222222222222,30.9552849531915,-59.2749781760892,52.4713950232968,-62.4250000000000,38.1200000000000,85,43,'';
    'C5' ,'',-90,0.399900000000000,4.94950482941819e-15,80.8315480490248,26.2918397986560,90,18.0180000000000,85,44,'';
    'C1' ,'',-90,0.133188888888889,2.11480422795274e-15,34.5373740318457,77.6670444589234,90,66.0260000000000,85,45,'';
    'C2' ,'',90,0.133483333333333,2.11920249382479e-15,-34.6092031645412,77.6350633175211,-90,65.9730000000000,85,46,'';
    'C6' ,'',90,0.399900000000000,4.94950482941819e-15,-80.8315480490248,26.2918397986560,-90,18.0180000000000,85,47,'';
    'CP3','',-117.575000000000,0.288222222222222,-30.9552849531915,59.2749781760892,52.4713950232968,117.575000000000,38.1200000000000,85,48,'';
    'CPz','',180,0.126622222222222,-32.9278836352560,-4.03250272966127e-15,78.3629662487520,-180,67.2080000000000,85,49,'';
    'CP4','',117.575000000000,0.288222222222222,-30.9552849531915,-59.2749781760892,52.4713950232968,-117.575000000000,38.1200000000000,85,50,'';
    'P5' ,'',-130.595000000000,0.431594444444444,-54.0378881132511,63.0582218645482,18.1264255588676,130.595000000000,12.3130000000000,85,51,'';
    'P1' ,'',-156.507000000000,0.279027777777778,-59.9127302448179,26.0420933899754,54.3808249889562,156.507000000000,39.7750000000000,85,52,'';
    'P2' ,'',156.507000000000,0.278783333333333,-59.8744127660117,-26.0254380421476,54.4309771236893,-156.507000000000,39.8190000000000,85,53,'';
    'P6' ,'',130.595000000000,0.431283333333333,-54.0263340465386,-63.0447391225751,18.2075835425317,-130.595000000000,12.3690000000000,85,54,'';
    'PO5','',-149.461000000000,0.466494444444444,-72.8038985751152,42.9515511178202,8.93065556594885,149.461000000000,6.03100000000000,85,55,'';
    'PO3','',-157.539000000000,0.421127777777778,-76.1527667684845,31.4827967984807,20.8468131677331,157.539000000000,14.1970000000000,85,56,'';
    'PO4','',157.539000000000,0.421127777777778,-76.1527667684845,-31.4827967984807,20.8468131677331,-157.539000000000,14.1970000000000,85,57,'';
    'PO6','',149.461000000000,0.466494444444444,-72.8038985751152,-42.9515511178202,8.93065556594885,-149.461000000000,6.03100000000000,85,58,'';
    'FT7','',-71.9480000000000,0.531916666666667,26.2075035325936,80.4100143118706,-8.50860487705560,71.9480000000000,-5.74500000000001,85,59,'';
    'FT8','',71.9480000000000,0.531916666666667,26.2075035325936,-80.4100143118706,-8.50860487705560,-71.9480000000000,-5.74500000000001,85,60,'';
    'TP7','',-108.052000000000,0.531916666666667,-26.2075035325936,80.4100143118706,-8.50860487705560,108.052000000000,-5.74500000000001,85,61,'';
    'TP8','',108.107000000000,0.531905555555556,-26.2847718099742,-80.3851021196760,-8.50565271492099,-108.107000000000,-5.74299999999999,85,62,'';
    'PO7','',-144.108000000000,0.522333333333333,-68.6910763510323,49.7094313148880,-5.95889822761610,144.108000000000,-4.02000000000000,85,63,'';
    'PO8','',144.142000000000,0.522311111111111,-68.7208994216315,-49.6689040281160,-5.95297869371352,-144.142000000000,-4.01600000000001,85,64,'';
    } ;

Neinterpoliuojami_kanalai=setdiff(lower(Reikalingi_kanalai), lower(KANALU_DUOMENYS(:,1)));
if ~isempty(Neinterpoliuojami_kanalai)
    disp('Funkcijos vidinė kanalų struktūra neleidžia interpoliuoti kai kurių prašomų kanalų:');
    disp(Neinterpoliuojami_kanalai);
    Reikalingi_kanalai=intersect(lower(Reikalingi_kanalai), lower(KANALU_DUOMENYS(:,1)));
end
NORIMU_KANALU_DUOMENYS=KANALU_DUOMENYS(find(ismember(lower(KANALU_DUOMENYS(:,1)),lower(Reikalingi_kanalai))),:) ;


% Bandyti išlaikyti seną atskaitos sistemą
reference=unique({EEG.chanlocs.ref});
if length(reference) == 1;
    reference=reference{1};
else
    reference='';
end;

% Sukurti naują EEG.chanlocs
EEG.chanlocs2=struct();
for k=1:length(Reikalingi_kanalai) ;
    EEG.chanlocs2(k).labels=    NORIMU_KANALU_DUOMENYS{k,1}         ;
    EEG.chanlocs2(k).type=      NORIMU_KANALU_DUOMENYS{k,2}         ;
    EEG.chanlocs2(k).theta=     NORIMU_KANALU_DUOMENYS{k,3}         ;
    EEG.chanlocs2(k).radius=    NORIMU_KANALU_DUOMENYS{k,4}         ;
    EEG.chanlocs2(k).X=         NORIMU_KANALU_DUOMENYS{k,5}         ;
    EEG.chanlocs2(k).Y=         NORIMU_KANALU_DUOMENYS{k,6}         ;
    EEG.chanlocs2(k).Z=         NORIMU_KANALU_DUOMENYS{k,7}         ;
    EEG.chanlocs2(k).sph_theta= NORIMU_KANALU_DUOMENYS{k,8}         ;
    EEG.chanlocs2(k).sph_phi=   NORIMU_KANALU_DUOMENYS{k,9}         ;
    EEG.chanlocs2(k).sph_radius=NORIMU_KANALU_DUOMENYS{k,10}        ;
    EEG.chanlocs2(k).urchan=    []; %NORIMU_KANALU_DUOMENYS{k,11}        ;
    EEG.chanlocs2(k).ref=       reference; % NORIMU_KANALU_DUOMENYS{k,12}        ;
end ;

%% Pats interpoliavimas

[EEG, LASTCOM] = pop_interp(EEG, EEG.chanlocs2, 'spherical');
EEG = eegh(LASTCOM, EEG);

%% Atmesti nepasirinktus

if Atmesti_nepasirinktus;
    [EEG, LASTCOM] = pop_select(EEG,'channel', Reikalingi_kanalai);
    EEG = eegh(LASTCOM, EEG);
end;
